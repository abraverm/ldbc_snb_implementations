PREFIX snvoc: <http://www.ldbc.eu/ldbc_socialnet/1.0/vocabulary/>

SELECT ?friend ?first ?last ?xCount ?yCount ((?xCount + ?yCount) as ?count)
WHERE {
  ?friend snvoc:firstName    ?first;
          snvoc:lastName     ?last.
  {
    SELECT ?friend (COUNT(?xMessage) as ?xCount )
    WHERE {
      ?friend   snvoc:isLocatedIn  ?city.
      ?xMessage snvoc:hasCreator   ?friend;
                snvoc:isLocatedIn  ?countryX;
                snvoc:creationDate ?date.
      FILTER (
        !exists { ?city snvoc:isPartOf ?countryX} &&
        ?date >= ?startDate && ?date < (?startDate + ?duration) )
      {
        SELECT DISTINCT ?friend
        WHERE {
          {
            ?person snvoc:knows ?tfr.
            ?tfr    snvoc:hasPerson ?friend.
          } union {
            ?person snvoc:knows ?tfr2.
            ?tfr2   snvoc:hasPerson ?fr2.
            ?fr2    snvoc:knows ?tfr.
            ?tfr    snvoc:hasPerson ?friend.
            filter (?friend != ?person)
          } .
        }
      }

    }
    GROUP BY ?friend

  }
  {

    SELECT ?friend (COUNT(?yMessage) as ?yCount )
    WHERE {
      ?friend   snvoc:isLocatedIn  ?city.
      ?yMessage snvoc:hasCreator   ?friend;
                snvoc:isLocatedIn  ?countryY;
                snvoc:creationDate ?date.
      FILTER (
        !exists { ?city snvoc:isPartOf ?countryY} &&
        ?date >= ?startDate && ?date < (?startDate + ?duration) )
      {
        SELECT DISTINCT ?friend
        WHERE {
          {
            ?person snvoc:knows ?tfr.
            ?tfr    snvoc:hasPerson ?friend.
          } union {
            ?person snvoc:knows ?tfr2.
            ?tfr2   snvoc:hasPerson ?fr2.
            ?fr2    snvoc:knows ?tfr.
            ?tfr    snvoc:hasPerson ?friend.
            filter (?friend != ?person)
          } .
        }
      }

    }
    GROUP BY ?friend

  }
  # FILTER (  ?xCount > 0 && ?yCount > 0)
}
ORDER BY DESC(?xCount) ASC(?friend)